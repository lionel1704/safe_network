name: 'sn: Run Client Tests against DO Testnet'

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '30 2 * * *'


env:
  CARGO_INCREMENTAL: '0'
  RUST_BACKTRACE: FULL
  RUSTFLAGS: "-D warnings"
  RUST_LOG: "safe_network=trace"
  SAFE_AUTH_PASSPHRASE: "x"
  SAFE_AUTH_PASSWORD: "y"
  SN_QUERY_TIMEOUT: 20 # 20 secs
  SN_AE_WAIT: 1 # 1 sec
  NODE_COUNT: 11
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'eu-west-2'

jobs:
  launch-testnet:
    name: Launch Digital Ocean testnet
    runs-on: ubuntu-latest
    steps:
      - name: Launch testnet
        uses: maidsafe/sn_testnet_action@master
        with:
          do-token: ${{ secrets.DO_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-access-key-secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ssh-secret-key: ${{ secrets.SSH_SECRET_KEY  }}
          build-node: true
          node-count: ${{ github.event.inputs.node-count || 50 }}

  run-client-tests:
    name: Run Client tests
    runs-on: ubuntu-latest
    needs: [launch-testnet]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set TESTNET_ID env
        shell: bash
        run: echo "TESTNET_ID=gha-testnet-$(echo ${{ github.event.pull_request.head.sha || github.sha }} | cut -c 1-7)" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Download network config
        shell: bash
        run: |
          mkdir -p ~/.safe/node
          wget https://safe-testnet-tool.s3.eu-west-2.amazonaws.com/${{ env.TESTNET_ID }}-node_connection_info.config -O ~/.safe/node/node_connection_info.config

      # a catchall to ensure any new client api tests are run (ideally any major new section should have its own test run)
      - name: Initital client tests...
        shell: bash
        # always joinable not actually needed here, but should speed up compilation as we've just built with it
        run: cargo test --release --features=always-joinable,test-utils -- client_api --skip client_api::reg --skip client_api::blob --skip client_api::transfer && sleep 5

      - name: Client reg tests
        shell: bash
        run: cargo test --release --features=always-joinable,test-utils -- client_api::reg && sleep 5

      - name: Client blob tests
        shell: bash
        run: cargo test --release --features=always-joinable,test-utils -- client_api::blob --test-threads=1 && sleep 5

      - name: Run example app for Blob API
        shell: bash
        run: cargo run --release  --features=always-joinable,test-utils --example client_blob

  kill-testnet:
    name: Destroy Digital Ocean testnet
    runs-on: ubuntu-latest
    needs: [launch-testnet, run-client-tests]
    steps:
      - name: Kill testnet
        uses: maidsafe/sn_testnet_action@master
        with:
          do-token: ${{ secrets.DO_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-access-key-secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          action: 'destroy'

  kill-if-fail:
    name: Destroy Digital Ocean testnet on fail
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.launch-testnet.result=='failure' || needs.run-client-tests.result=='failure') }}
    needs: [launch-testnet, run-client-tests]
    steps:
      - name: Kill testnet
        uses: maidsafe/sn_testnet_action@master
        with:
          do-token: ${{ secrets.DO_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-access-key-secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          action: 'destroy'
